
If a thread is preempted before its time slice is up is should be added at the
front of the corresponding run queue instead of of at the back

Have all ISRs run unprivileged. rtos_enter_isr() should return in unprivileged
mode.

Create two packages:

hirtos-application_interface.ads:
- rtos_init() (can be called multi-le times: once per CPU core, HiRTOS keeps
        separate state variablesd for each CPU core)
- ...
- rtos_enter_isr()
- rtos_exit_isr()

- rtos_create_interrupt_handler(irq_num, isr, priority)
- set_data_region_writable()
- ...


hirtos-platform-interface.ads:
- raise_cpu_privilege()
- restore_cpu_privilege()
- disable_cpu_interrupts()
- restore_cpu_interrupts(old_int_mask)
- disable_cpu_interrupts_below_priority()
- restore_cpu_interrupts_below_priority(old_int_prio)
	// See Table 4-32 GICC_PMR Register bit assignments,
	// ARM Generic Interrupt Controller Architecture Specification
- init_thread_mpu_regions()
- save_thread_mpu_regions()
- restore_thread_mpu_regions()
- init_thread_cpu_registers()
- save_thread_cpu_registers()
- restore_thread_cpu_registers()
- first_task_context_switch()
- get_cpu_id()
- start_tick_timer(timer_callback)

- mem_prot_init()
- interrupt_controller_init()
- interrupt_controller_enable_irq()

hirtos-platform-interface/armv7-r
hirtos-platform-interface/armv7-m
hirtos-platform-interface/armv8-r
hirtos-platform-interface/riscv32
hirtos-platform-interface/riscv64

hirtos-platform-interface/third-party/minimal runtime here)


Checks every ms that current task is not running more than 1ms continously
(as that would impact the response time of otgher tasks that are ready to
 run and may miss their deadlines (e.g. periodic tasks that don't get to run
 before thir next period)

Tickless idle

DESIGN DECISIONS

Initialize_Rtos will initialize the MPU regions but will return still in
privilege mode to the reset handler. So, that we don't have to consider
the reset handler as a special interrupt context case when entering/exiting
privileged mode. So only threads will run in unprivileged mode.
